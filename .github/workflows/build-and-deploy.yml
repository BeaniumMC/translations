name: Build & Deploy Dashboard & Release

on:
  push:
    branches: [main]
    paths:
      - 'sources/**'
      - 'translations/**'
      - 'scripts/**'
      - 'public/**'
      - 'languages.json'

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Lint Translations
        run: python scripts/lint_translations.py

      - name: Generate Summary
        run: python scripts/generate_summary.py

      - name: Prepare Export
        id: prepare_export
        run: |
          mkdir -p exports
          if [ "$(find translations -mindepth 1 -maxdepth 1 -type d | wc -l)" -gt 0 ]; then
            cd translations
            zip -r ../exports/translations.zip ./* -i '*/'
            echo "zip_created=true" >> $GITHUB_OUTPUT
          else
            echo "zip_created=false" >> $GITHUB_OUTPUT
            echo "No language folders found, skipping zip creation."
          fi

      - name: Get Release Tag with Commit Hash
        id: date
        if: steps.prepare_export.outputs.zip_created == 'true'
        run: |
          SHORT_SHA=$(git rev-parse --short HEAD)
          DATE_TAG=v$(date +'%Y.%m.%d')-${SHORT_SHA}
          echo "tag=${DATE_TAG}" >> "$GITHUB_OUTPUT"

      - name: Create GitHub Release
        id: create_release
        if: steps.prepare_export.outputs.zip_created == 'true'
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.date.outputs.tag }}
          release_name: "Translation Export - ${{ steps.date.outputs.tag }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload ZIP to GitHub Release
        if: steps.prepare_export.outputs.zip_created == 'true'
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./exports/translations.zip
          asset_name: translations.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload public folder artifact
        uses: actions/upload-artifact@v4
        with:
          name: public-folder
          path: public

  deploy:
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download public folder artifact
        uses: actions/download-artifact@v4
        with:
          name: public-folder
          path: public

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './public'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
